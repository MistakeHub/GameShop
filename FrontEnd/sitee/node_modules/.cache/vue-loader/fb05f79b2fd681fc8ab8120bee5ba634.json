{"remainingRequest":"C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\src\\components\\AdminComponents\\MostPurcheasableProductsComponent.vue?vue&type=template&id=370589cd&","dependencies":[{"path":"C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\src\\components\\AdminComponents\\MostPurcheasableProductsComponent.vue","mtime":1632870683952},{"path":"C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1632558950000},{"path":"C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1632558950000},{"path":"C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1632558950000},{"path":"C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\node_modules\\vue-loader\\lib\\index.js","mtime":1632558950000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCBbCiAgICBfYygKICAgICAgImRpdiIsCiAgICAgIFsKICAgICAgICBfYygiaDIiLCBbX3ZtLl92KCLQodCw0LzRi9C1INC/0YDQvtC00LDQstCw0LXQvNGL0LUg0L/RgNC+0LTRg9C60YLRiyAiKV0pLAogICAgICAgIF9jKAogICAgICAgICAgImRpdiIsCiAgICAgICAgICBbCiAgICAgICAgICAgIF9jKCJsYWJlbCIsIHsgYXR0cnM6IHsgZm9yOiAiZnJvbSIgfSB9LCBbX3ZtLl92KCLQntGCOiIpXSksCiAgICAgICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LW1vZGVsIiwKICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5mcm9tLAogICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAiZnJvbSIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgIGF0dHJzOiB7IHR5cGU6ICJkYXRlIiwgaWQ6ICJmcm9tIiwgbmFtZTogInRyaXAtc3RhcnQiIH0sCiAgICAgICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS5mcm9tIH0sCiAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgIGlucHV0OiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgaWYgKCRldmVudC50YXJnZXQuY29tcG9zaW5nKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgX3ZtLmZyb20gPSAkZXZlbnQudGFyZ2V0LnZhbHVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KSwKICAgICAgICAgICAgX2MoImxhYmVsIiwgeyBhdHRyczogeyBmb3I6ICJ0byIgfSB9LCBbX3ZtLl92KCLQlNC+OiIpXSksCiAgICAgICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LW1vZGVsIiwKICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS50bywKICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInRvIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogImRhdGUiLCBpZDogInRvIiwgbmFtZTogInRyaXAtc3RhcnQiIH0sCiAgICAgICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS50byB9LAogICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICBpbnB1dDogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgIGlmICgkZXZlbnQudGFyZ2V0LmNvbXBvc2luZykgewogICAgICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIF92bS50byA9ICRldmVudC50YXJnZXQudmFsdWUKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pLAogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAiYi1idXR0b24iLAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAidGV4dC13aGl0ZSIsCiAgICAgICAgICAgICAgICBhdHRyczogeyB2YXJpYW50OiAic3VjY2VzcyIgfSwKICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLlN1Ym1pdCgpCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIFtfdm0uX3YoItCf0L7Qu9GD0YfQuNGC0YwiKV0KICAgICAgICAgICAgKSwKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgImItYnV0dG9uIiwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBhdHRyczogeyB2YXJpYW50OiAiZGFuZ2VyIiB9LAogICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uUmVzZXQoKQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBbX3ZtLl92KCLQntGH0LjRgdGC0LjRgtGMIildCiAgICAgICAgICAgICksCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJiLWRyb3Bkb3duIiwKICAgICAgICAgICAgICB7IGF0dHJzOiB7IHRleHQ6ICLQpNC40LvRjNGC0YDRiyIgfSB9LAogICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgIF9jKCJsYWJlbCIsIHsgYXR0cnM6IHsgZm9yOiAiZ2VucmVzIiB9IH0sIFtfdm0uX3YoItCW0LDQvdGAIildKSwKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAiYi1mb3JtLXNlbGVjdCIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm10LTMiLAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IG9wdGlvbnM6IF92bS5HZW5yZXMsIHNpemU6ICJzbSIsIGlkOiAiZ2VucmVzIiB9LAogICAgICAgICAgICAgICAgICAgIG1vZGVsOiB7CiAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnNlbGVjdGVkZ2VucmUsCiAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oJCR2KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5zZWxlY3RlZGdlbnJlID0gJCR2CiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInNlbGVjdGVkZ2VucmUiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgX2MoImItZm9ybS1zZWxlY3Qtb3B0aW9uIiwgeyBhdHRyczogeyB2YWx1ZTogW10gfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoItCS0YHQtSIpCiAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgIF9jKCJsYWJlbCIsIHsgYXR0cnM6IHsgZm9yOiAicGxhdGZvcm0iIH0gfSwgWwogICAgICAgICAgICAgICAgICBfdm0uX3YoItCf0LvQsNGC0YTQvtGA0LzQsCIpCiAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAiYi1mb3JtLXNlbGVjdCIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm10LTMiLAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICBvcHRpb25zOiBfdm0uUGxhdGZvcm1zLAogICAgICAgICAgICAgICAgICAgICAgc2l6ZTogInNtIiwKICAgICAgICAgICAgICAgICAgICAgIGlkOiAicGxhdGZvcm0iCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5zZWxlY3RlZHBsYXRmb3JtLAogICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKCQkdikgewogICAgICAgICAgICAgICAgICAgICAgICBfdm0uc2VsZWN0ZWRwbGF0Zm9ybSA9ICQkdgogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJzZWxlY3RlZHBsYXRmb3JtIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgIF9jKCJiLWZvcm0tc2VsZWN0LW9wdGlvbiIsIHsgYXR0cnM6IHsgdmFsdWU6IFtdIH0gfSwgWwogICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCLQktGB0LUiKQogICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICBfYygibGFiZWwiLCB7IGF0dHJzOiB7IGZvcjogImxvY2FsaXphdGlvbiIgfSB9LCBbCiAgICAgICAgICAgICAgICAgIF92bS5fdigi0JvQvtC60LDQu9C40LfQsNGG0LjRjyIpCiAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAiYi1mb3JtLXNlbGVjdCIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm10LTMiLAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICBvcHRpb25zOiBfdm0uTG9jYWxpemF0aW9ucywKICAgICAgICAgICAgICAgICAgICAgIHNpemU6ICJzbSIsCiAgICAgICAgICAgICAgICAgICAgICBpZDogImxvY2FsaXphdGlvbiIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIG1vZGVsOiB7CiAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnNlbGVjdGVkbG9jYWxpemF0aW9uLAogICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKCQkdikgewogICAgICAgICAgICAgICAgICAgICAgICBfdm0uc2VsZWN0ZWRsb2NhbGl6YXRpb24gPSAkJHYKICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAic2VsZWN0ZWRsb2NhbGl6YXRpb24iCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgX2MoImItZm9ybS1zZWxlY3Qtb3B0aW9uIiwgeyBhdHRyczogeyB2YWx1ZTogW10gfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoItCS0YHQtSIpCiAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgIF9jKCJsYWJlbCIsIHsgYXR0cnM6IHsgZm9yOiAic2VyaWVzIiB9IH0sIFsKICAgICAgICAgICAgICAgICAgX3ZtLl92KCLQodC10YDQuNGPINCY0LPRgCIpCiAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAiYi1mb3JtLXNlbGVjdCIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm10LTMiLAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IG9wdGlvbnM6IF92bS5TZXJpZXMsIHNpemU6ICJzbSIsIGlkOiAic2VyaWVzIiB9LAogICAgICAgICAgICAgICAgICAgIG1vZGVsOiB7CiAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnNlbGVjdGVkc2VyaWUsCiAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oJCR2KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5zZWxlY3RlZHNlcmllID0gJCR2CiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInNlbGVjdGVkc2VyaWUiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgX2MoImItZm9ybS1zZWxlY3Qtb3B0aW9uIiwgeyBhdHRyczogeyB2YWx1ZTogW10gfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoItCS0YHQtSIpCiAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgIF9jKCJsYWJlbCIsIHsgYXR0cnM6IHsgZm9yOiAibWFudWZhY3R1cmUiIH0gfSwgWwogICAgICAgICAgICAgICAgICBfdm0uX3YoItCf0YDQvtC40LfQstC+0LTQuNGC0LXQu9C4IikKICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJiLWZvcm0tc2VsZWN0IiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibXQtMyIsCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbnM6IF92bS5NYW51ZmFjdHVyZXMsCiAgICAgICAgICAgICAgICAgICAgICBzaXplOiAic20iLAogICAgICAgICAgICAgICAgICAgICAgaWQ6ICJtYW51ZmFjdHVyZSIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIG1vZGVsOiB7CiAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnNlbGVjdGVkbWFudWZhY3R1cmUsCiAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oJCR2KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5zZWxlY3RlZG1hbnVmYWN0dXJlID0gJCR2CiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInNlbGVjdGVkbWFudWZhY3R1cmUiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgX2MoImItZm9ybS1zZWxlY3Qtb3B0aW9uIiwgeyBhdHRyczogeyB2YWx1ZTogW10gfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoItCS0YHQtSIpCiAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgMQogICAgICAgICAgICApLAogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAiYi1idXR0b24iLAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAidGV4dC13aGl0ZSBiZy1zZWNvbmRhcnkiLAogICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uU2F2ZVRvRXhjZWwoKQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBbX3ZtLl92KCLQodC+0YXRgNCw0L3QuNGC0Ywg0LIgQ1NWIildCiAgICAgICAgICAgICkKICAgICAgICAgIF0sCiAgICAgICAgICAxCiAgICAgICAgKSwKICAgICAgICBfdm0uZnJvbSA9PT0gIiIgJiYgX3ZtLnRvID09PSAiIgogICAgICAgICAgPyBfYygiaDEiLCBbX3ZtLl92KCIg0JfQsCDQstGB0ZEg0LLRgNC10LzRjyIpXSkKICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljU3R5bGU6IHsgZGlzcGxheTogInRhYmxlIiwgd2lkdGg6ICI4MCUiIH0gfSwgWwogICAgICAgICAgX3ZtLmZyb20gIT09ICIiCiAgICAgICAgICAgID8gX2MoImgzIiwgeyBzdGF0aWNTdHlsZTogeyBkaXNwbGF5OiAidGFibGUtY2VsbCIgfSB9LCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoIiDQvtGCOiIgKyBfdm0uX3MoX3ZtLmZyb20pICsgIiAiKQogICAgICAgICAgICAgIF0pCiAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICBfdm0udG8gIT09ICIiCiAgICAgICAgICAgID8gX2MoImgzIiwgeyBzdGF0aWNTdHlsZTogeyBkaXNwbGF5OiAidGFibGUtY2VsbCIgfSB9LCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoIiDQtNC+OiIgKyBfdm0uX3MoX3ZtLnRvKSArICIgIikKICAgICAgICAgICAgICBdKQogICAgICAgICAgICA6IF92bS5fZSgpCiAgICAgICAgXSksCiAgICAgICAgX2MoImItdGFibGUiLCB7CiAgICAgICAgICBhdHRyczogewogICAgICAgICAgICBzdHJpcGVkOiAiIiwKICAgICAgICAgICAgaG92ZXI6ICIiLAogICAgICAgICAgICBpZDogInRhYmxlMSIsCiAgICAgICAgICAgIGl0ZW1zOiBfdm0uUHVyY2hlYXNhYmxlUHJvZHVjdHMsCiAgICAgICAgICAgICJwZXItcGFnZSI6IF92bS5wYWdlc2l6ZSwKICAgICAgICAgICAgImN1cnJlbnQtcGFnZSI6IF92bS5jdXJyZW50cGFnZSwKICAgICAgICAgICAgZmllbGRzOiBfdm0uZmllbGRzCiAgICAgICAgICB9CiAgICAgICAgfSksCiAgICAgICAgX2MoImItcGFnaW5hdGlvbiIsIHsKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICJ0b3RhbC1yb3dzIjogX3ZtLmNvdW50UHVibGljYXRpb24sCiAgICAgICAgICAgICJwZXItcGFnZSI6IF92bS5wYWdlc2l6ZSwKICAgICAgICAgICAgImFyaWEtY29udHJvbHMiOiAidGFibGUxIgogICAgICAgICAgfSwKICAgICAgICAgIG1vZGVsOiB7CiAgICAgICAgICAgIHZhbHVlOiBfdm0uY3VycmVudHBhZ2UsCiAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbigkJHYpIHsKICAgICAgICAgICAgICBfdm0uY3VycmVudHBhZ2UgPSAkJHYKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZXhwcmVzc2lvbjogImN1cnJlbnRwYWdlIgogICAgICAgICAgfQogICAgICAgIH0pCiAgICAgIF0sCiAgICAgIDEKICAgICksCiAgICBfYygiZGl2IiksCiAgICBfYygiZGl2IiwgW19jKCJyb3V0ZXItdmlldyIpXSwgMSkKICBdKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}
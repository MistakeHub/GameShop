{"remainingRequest":"C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\src\\components\\AdminComponents\\AdminPanelTablesPublicationComponent.vue?vue&type=template&id=9d10a836&","dependencies":[{"path":"C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\src\\components\\AdminComponents\\AdminPanelTablesPublicationComponent.vue","mtime":1629883891380},{"path":"C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImRpdiIsCiAgICBbCiAgICAgIF9jKCJiLXRhYmxlIiwgewogICAgICAgIGF0dHJzOiB7CiAgICAgICAgICBzdHJpcGVkOiAiIiwKICAgICAgICAgIGhvdmVyOiAiIiwKICAgICAgICAgIGlkOiAicHVibGljYXRpb24tdGFibGUiLAogICAgICAgICAgaXRlbXM6IF92bS5wdWJsaWNhdGlvbnMsCiAgICAgICAgICAicGVyLXBhZ2UiOiBfdm0ucGFnZXNpemUsCiAgICAgICAgICAiY3VycmVudC1wYWdlIjogX3ZtLmN1cnJlbnRwYWdlLAogICAgICAgICAgZmllbGRzOiBfdm0uZmlsZWRzCiAgICAgICAgfSwKICAgICAgICBzY29wZWRTbG90czogX3ZtLl91KFsKICAgICAgICAgIHsKICAgICAgICAgICAga2V5OiAiY2VsbChhY3Rpb25zKSIsCiAgICAgICAgICAgIGZuOiBmdW5jdGlvbihyb3cpIHsKICAgICAgICAgICAgICByZXR1cm4gWwogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJiLWJ1dHRvbiIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm1yLTEiLAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNpemU6ICJzbSIgfSwKICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLlJlbW92ZShyb3cuaXRlbS5pZCkKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIiDQo9C00LDQu9C10L3QuNC1ICIpXQogICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgIHJvdy5pdGVtLnRpdGxlb2ZwbGF0Zm9ybSAhPSB1bmRlZmluZWQKICAgICAgICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICAgICAgICJiLWJ1dHRvbiIsCiAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibXItMSIsCiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNpemU6ICJzbSIsICJidi1tb2RhbC1leGFtcGxlMiI6ICIiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5TaG93RWRpdE1vZGFsKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByb3cuaXRlbS5pZCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcm93Lml0ZW0udGl0bGVvZnBsYXRmb3JtCiAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiINCg0LXQtNCw0LrRgtC40YDQvtCy0LDQvdC40LUiKV0KICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICByb3cuaXRlbS50aXRsZW9mc3RhdHVzZSAhPSB1bmRlZmluZWQKICAgICAgICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICAgICAgICJiLWJ1dHRvbiIsCiAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibXItMSIsCiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNpemU6ICJzbSIsICJidi1tb2RhbC1leGFtcGxlMiI6ICIiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5TaG93RWRpdE1vZGFsKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByb3cuaXRlbS5pZCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcm93Lml0ZW0udGl0bGVvZnN0YXR1c2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCIg0KDQtdC00LDQutGC0LjRgNC+0LLQsNC90LjQtSIpXQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICAgIHJvdy5pdGVtLnRpdGxlb2Zsb2NhbGl6YXRpb24gIT0gdW5kZWZpbmVkCiAgICAgICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICAgICAiYi1idXR0b24iLAogICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm1yLTEiLAogICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBzaXplOiAic20iLCAiYnYtbW9kYWwtZXhhbXBsZTIiOiAiIiB9LAogICAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uU2hvd0VkaXRNb2RhbCgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcm93Lml0ZW0uaWQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvdy5pdGVtLnRpdGxlb2Zsb2NhbGl6YXRpb24KICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCIg0KDQtdC00LDQutGC0LjRgNC+0LLQsNC90LjQtSIpXQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICAgIHJvdy5pdGVtLnRpdGxlb2ZtYW51ZmFjdHVyZXMgIT0gdW5kZWZpbmVkCiAgICAgICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICAgICAiYi1idXR0b24iLAogICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm1yLTEiLAogICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBzaXplOiAic20iLCAiYnYtbW9kYWwtZXhhbXBsZTIiOiAiIiB9LAogICAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uU2hvd0VkaXRNb2RhbCgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcm93Lml0ZW0uaWQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvdy5pdGVtLnRpdGxlb2ZtYW51ZmFjdHVyZXMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCIg0KDQtdC00LDQutGC0LjRgNC+0LLQsNC90LjQtSIpXQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICAgIHJvdy5pdGVtLnRpdGxlb2ZnZW5yZSAhPSB1bmRlZmluZWQKICAgICAgICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICAgICAgICJiLWJ1dHRvbiIsCiAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibXItMSIsCiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNpemU6ICJzbSIsICJidi1tb2RhbC1leGFtcGxlMiI6ICIiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5TaG93RWRpdE1vZGFsKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByb3cuaXRlbS5pZCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcm93Lml0ZW0udGl0bGVvZmdlbnJlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiINCg0LXQtNCw0LrRgtC40YDQvtCy0LDQvdC40LUiKV0KICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICByb3cuaXRlbS50aXRsZW9mY291bnRyeSAhPSB1bmRlZmluZWQKICAgICAgICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICAgICAgICJiLWJ1dHRvbiIsCiAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibXItMSIsCiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNpemU6ICJzbSIsICJidi1tb2RhbC1leGFtcGxlMiI6ICIiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5TaG93RWRpdE1vZGFsKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByb3cuaXRlbS5pZCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcm93Lml0ZW0udGl0bGVvZmNvdW50cnkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCIg0KDQtdC00LDQutGC0LjRgNC+0LLQsNC90LjQtSIpXQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgICAgIHJvdy5pdGVtLnRpdGxlb2ZSb2xlICE9IHVuZGVmaW5lZAogICAgICAgICAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICAgICAgICAgImItYnV0dG9uIiwKICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJtci0xIiwKICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgc2l6ZTogInNtIiwgImJ2LW1vZGFsLWV4YW1wbGUyIjogIiIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLlNob3dFZGl0TW9kYWwoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJvdy5pdGVtLmlkLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByb3cuaXRlbS50aXRsZW9mUm9sZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIiDQoNC10LTQsNC60YLQuNGA0L7QstCw0L3QuNC1IildCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgICAgICAgcm93Lml0ZW0udGl0bGVvZnNlcmllcyAhPSB1bmRlZmluZWQKICAgICAgICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICAgICAgICJiLWJ1dHRvbiIsCiAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibXItMSIsCiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNpemU6ICJzbSIsICJidi1tb2RhbC1leGFtcGxlMiI6ICIiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5TaG93RWRpdE1vZGFsKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByb3cuaXRlbS5pZCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcm93Lml0ZW0udGl0bGVvZnNlcmllcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIiDQoNC10LTQsNC60YLQuNGA0L7QstCw0L3QuNC1IildCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgICAgICAgcm93Lml0ZW0udGl0bGVvZmdhbWUgIT0gdW5kZWZpbmVkCiAgICAgICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICAgICAiYi1idXR0b24iLAogICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm1yLTEiLAogICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgIHNpemU6ICJzbSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgImJ2LW1vZGFsLWV4YW1wbGUyIjogIiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgaHJlZjogX3ZtLkFkZFJlZgogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiINCg0LXQtNCw0LrRgtC40YDQvtCy0LDQvdC40LUiKV0KICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgICByb3cuaXRlbS5sb2dpbiAhPSB1bmRlZmluZWQKICAgICAgICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICAgICAgICJiLWJ1dHRvbiIsCiAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibXItMSIsCiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZTogInNtIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAiYnYtbW9kYWwtZXhhbXBsZTIiOiAiIiwKICAgICAgICAgICAgICAgICAgICAgICAgICBocmVmOiBfdm0uQWRkUmVmCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCIg0KDQtdC00LDQutGC0LjRgNC+0LLQsNC90LjQtSIpXQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKQogICAgICAgICAgICAgIF0KICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAga2V5OiAiY2VsbChhdmF0YXIpIiwKICAgICAgICAgICAgZm46IGZ1bmN0aW9uKHJvdykgewogICAgICAgICAgICAgIHJldHVybiBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInVzZXItaW1nIHJvdW5kZWQtY2lyY2xlIG1yLTIiLAogICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgIHNyYzoKICAgICAgICAgICAgICAgICAgICAgIHJvdy5pdGVtLmF2YXRhciA9PSBudWxsCiAgICAgICAgICAgICAgICAgICAgICAgID8gImh0dHBzOi8vbG9jYWxob3N0OjQ0MzAzL2dldEltYWdlL0F2YXRhci9EZWZhdWx0LmpwZyIKICAgICAgICAgICAgICAgICAgICAgICAgOiByb3cuaXRlbS5hdmF0YXIudXJsLAogICAgICAgICAgICAgICAgICAgIHdpZHRoOiAiMzAiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgXQogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICBrZXk6ICJjZWxsKHJvbGUpIiwKICAgICAgICAgICAgZm46IGZ1bmN0aW9uKHJvdykgewogICAgICAgICAgICAgIHJldHVybiBbX3ZtLl92KF92bS5fcyhyb3cuaXRlbS5yb2xlLnRpdGxlb2ZSb2xlKSldCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgIGtleTogImNlbGwoc3RhdHVzZSkiLAogICAgICAgICAgICBmbjogZnVuY3Rpb24ocm93KSB7CiAgICAgICAgICAgICAgcmV0dXJuIFtfdm0uX3YoX3ZtLl9zKHJvdy5pdGVtLnN0YXR1cy50aXRsZW9mc3RhdHVzZSkpXQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgXSkKICAgICAgfSksCiAgICAgIF9jKCJiLXBhZ2luYXRpb24iLCB7CiAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICJ0b3RhbC1yb3dzIjogX3ZtLmNvdW50UHVibGljYXRpb24sCiAgICAgICAgICAicGVyLXBhZ2UiOiBfdm0ucGFnZXNpemUsCiAgICAgICAgICAiYXJpYS1jb250cm9scyI6ICJwdWJsaWNhdGlvbi10YWJsZSIKICAgICAgICB9LAogICAgICAgIG1vZGVsOiB7CiAgICAgICAgICB2YWx1ZTogX3ZtLmN1cnJlbnRwYWdlLAogICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKCQkdikgewogICAgICAgICAgICBfdm0uY3VycmVudHBhZ2UgPSAkJHYKICAgICAgICAgIH0sCiAgICAgICAgICBleHByZXNzaW9uOiAiY3VycmVudHBhZ2UiCiAgICAgICAgfQogICAgICB9KSwKICAgICAgX2MoCiAgICAgICAgImRpdiIsCiAgICAgICAgWwogICAgICAgICAgIV92bS5pc0hhdmVNb2RhbAogICAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICAgImItYnV0dG9uIiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdmFyaWFudDogInN1Y2NlcyIsIGhyZWY6IF92bS5BZGRSZWYgfSwKICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLiRidk1vZGFsLnNob3coImJ2LW1vZGFsLWV4YW1wbGUiKQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIFtfdm0uX3YoIiBOZXciKV0KICAgICAgICAgICAgICApCiAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICBfdm0uaXNIYXZlTW9kYWwKICAgICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAgICJiLWJ1dHRvbiIsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAiYi1tb2RhbCIsCiAgICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1iLW1vZGFsLm1vZGFsLTEiLAogICAgICAgICAgICAgICAgICAgICAgbW9kaWZpZXJzOiB7ICJtb2RhbC0xIjogdHJ1ZSB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICBhdHRyczogeyB2YXJpYW50OiAic3VjY2VzIiB9LAogICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uJGJ2TW9kYWwuc2hvdygiYnYtbW9kYWwtZXhhbXBsZSIpCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgW192bS5fdigiIE5ldyIpXQogICAgICAgICAgICAgICkKICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiYi1idXR0b24iLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgYXR0cnM6IHsgdmFyaWFudDogIndhcm5pbmciIH0sCiAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5TYXZlVG9Kc29uKCkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFtfdm0uX3YoIlNhdmVUb0pzb24iKV0KICAgICAgICAgICksCiAgICAgICAgICBfYygKICAgICAgICAgICAgImItYnV0dG9uIiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIGF0dHJzOiB7IHZhcmlhbnQ6ICJ3YXJuaW5nIiB9LAogICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uTG9hZEZyb21Kc29uKCkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFtfdm0uX3YoIkxvYWRGcm9tSnNvbiIpXQogICAgICAgICAgKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiYi1tb2RhbCIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBhdHRyczogeyBpZDogImJ2LW1vZGFsLWV4YW1wbGUiLCAiaGlkZS1mb290ZXIiOiAiIiB9LAogICAgICAgICAgICAgIHNjb3BlZFNsb3RzOiBfdm0uX3UoWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBrZXk6ICJtb2RhbC10aXRsZSIsCiAgICAgICAgICAgICAgICAgIGZuOiBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gW19jKCJoMSIsIFtfdm0uX3YoItCU0L7QsdCw0LLQu9C10L3QuNC1INC90L7QstC+0LPQviDRjdC70LXQvNC10L3RgtCwIildKV0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgcHJveHk6IHRydWUKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBdKQogICAgICAgICAgICB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJkLWJsb2NrIHRleHQtY2VudGVyIiB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygibGFiZWwiLCBbX3ZtLl92KCLQvdCw0LLQt9Cw0L3QuNC1IildKSwKICAgICAgICAgICAgICAgICAgX2MoImItaW5wdXQiLCB7CiAgICAgICAgICAgICAgICAgICAgbW9kZWw6IHsKICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0udGl0bGUsCiAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oJCR2KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIF92bS50aXRsZSA9ICQkdgogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJ0aXRsZSIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAiYi1idXR0b24iLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm10LTMiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyBibG9jazogIiIgfSwKICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLkFkZCgpCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgW192bS5fdigi0J/QvtC00YLQstC10YDQtNC40YLRjCAiKV0KICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX2MoCiAgICAgICAgImRpdiIsCiAgICAgICAgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJiLW1vZGFsIiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIHJlZjogImJ2LW1vZGFsLWV4YW1wbGUyIiwKICAgICAgICAgICAgICBhdHRyczogeyAiaGlkZS1mb290ZXIiOiAiIiB9LAogICAgICAgICAgICAgIHNjb3BlZFNsb3RzOiBfdm0uX3UoWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBrZXk6ICJtb2RhbC10aXRsZSIsCiAgICAgICAgICAgICAgICAgIGZuOiBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gW19jKCJoMSIsIFtfdm0uX3YoItCg0LXQtNCw0LrRgtC40YDQvtCy0LDQvdC40LUiKV0pXQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBwcm94eTogdHJ1ZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIF0pCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImQtYmxvY2sgdGV4dC1jZW50ZXIiIH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKCJsYWJlbCIsIFtfdm0uX3YoItC90LDQstC30LDQvdC40LUiKV0pLAogICAgICAgICAgICAgICAgICBfYygiYi1pbnB1dCIsIHsKICAgICAgICAgICAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS50aXRsZSwKICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbigkJHYpIHsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLnRpdGxlID0gJCR2CiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInRpdGxlIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJiLWJ1dHRvbiIsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibXQtMyIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGJsb2NrOiAiIiB9LAogICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uRWRpdEVsZW1lbnQoKQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIFtfdm0uX3YoItCf0L7QtNGC0LLQtdGA0LTQuNGC0YwgIildCiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdLAogICAgICAgICAgICAxCiAgICAgICAgICApCiAgICAgICAgXSwKICAgICAgICAxCiAgICAgICksCiAgICAgIF9jKCJyb3V0ZXItdmlldyIpCiAgICBdLAogICAgMQogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}
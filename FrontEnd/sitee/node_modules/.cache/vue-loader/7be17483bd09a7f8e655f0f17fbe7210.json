{"remainingRequest":"C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\src\\components\\AdminComponents\\AddFormComponents\\AddPublicationFormComponent.vue?vue&type=template&id=39087c70&","dependencies":[{"path":"C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\src\\components\\AdminComponents\\AddFormComponents\\AddPublicationFormComponent.vue","mtime":1631815757378},{"path":"C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1630103585000},{"path":"C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1630103585000},{"path":"C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1630103585000},{"path":"C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\node_modules\\vue-loader\\lib\\index.js","mtime":1630103585000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}
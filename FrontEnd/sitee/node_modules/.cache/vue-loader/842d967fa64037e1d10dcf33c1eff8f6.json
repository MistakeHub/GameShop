{"remainingRequest":"C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\src\\components\\AdminComponents\\AddFormComponents\\AddEditUserFormComponent.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\src\\components\\AdminComponents\\AddFormComponents\\AddEditUserFormComponent.vue","mtime":1632558950000},{"path":"C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\node_modules\\css-loader\\dist\\cjs.js","mtime":1632558950000},{"path":"C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1632558950000},{"path":"C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\node_modules\\postcss-loader\\src\\index.js","mtime":1632558950000},{"path":"C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1632558950000},{"path":"C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\node_modules\\vue-loader\\lib\\index.js","mtime":1632558950000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jb250YWluZXIgLmJ0biB7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICB0b3A6IDAlOwogICAgbGVmdDoxMDAlOwogICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7CiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTU1OwogICAgY29sb3I6IHdoaXRlOwogICAgZm9udC1zaXplOiAxNnB4OwogICAgcGFkZGluZzogMTJweCAyNHB4OwogICAgYm9yZGVyOiBub25lOwogICAgY3Vyc29yOiBwb2ludGVyOwogICAgYm9yZGVyLXJhZGl1czogNXB4OwogICAgdGV4dC1hbGlnbjogY2VudGVyOwp9Cg=="},{"version":3,"sources":["AddEditUserFormComponent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AddEditUserFormComponent.vue","sourceRoot":"src/components/AdminComponents/AddFormComponents","sourcesContent":["<template>\n <div >\n\n    <b-form class=\" bg-white\" >\n      <h1 v-if=\"$route.meta.EditFormUser\">Редактирование Пользователя \"{{Login}}\"</h1>\n     <h1 v-if=\"!$route.meta.EditFormUser\">Добавление нового Пользователя</h1>\n      <b-form-group\n        id=\"input-group-1\"\n        label=\"Логин:\"\n        label-for=\"input-1\"\n      \n      >\n      \n        <b-form-input\n          id=\"input-1\"\n          name=\"login\"\n           v-validate=\"{required:true,min:3,max:20,regex:/^[a-zA-Z](.[a-zA-Z0-9_-]*)$/}\"\n            :state=\"validateState('login')\"\n         v-model=\"Login\"\n          type=\"text\"\n          placeholder=\"Enter Title\"\n          required\n        ></b-form-input>\n         <b-form-invalid-feedback id=\"input-1-live-feedback\">{{ veeErrors.first('login') }}</b-form-invalid-feedback>\n      </b-form-group>\n\n        <b-form-group\n        id=\"input-group-1\"\n        label=\"Пароль(Хэширован):\"\n        label-for=\"input-2\"\n      \n      >\n        </b-form-group>\n      \n        <b-form-input\n      id=\"input-2\"\n        name=\"password\"\n\n      v-model=\"Password\"\n      placeholder=\"Enter something...\"\n      rows=\"3\"\n      max-rows=\"6\"\n    ></b-form-input>\n     <b-form-invalid-feedback id=\"input-1-live-feedback\">{{ veeErrors.first('password') }}</b-form-invalid-feedback>\n    \n\n      <b-form-group\n        id=\"input-group-1\"\n        label=\"Почта:\"\n        label-for=\"input-3\"\n      \n      >\n      \n <b-form-input\n      id=\"input-3\"\n             name=\"input-2\"\n               v-validate=\"'required|email'\"\n               :state=\"validateState('input-2')\"\n      v-model=\"Email\"\n      placeholder=\"Enter something...\"\n      rows=\"3\"\n      max-rows=\"6\"\n    ></b-form-input>\n     <b-form-invalid-feedback id=\"input-1-live-feedback\">{{ veeErrors.first('input-2') }}</b-form-invalid-feedback>\n     \n      \n   \n\n    \n\n    \n         <b-form-group label=\"Статусы\"  >\n      <b-form-radio-group\n      v-for=\"elem in statuse\"\n        id=\"radiobutton-group-1\"\n      \n    \n        name=\"flavour-2\"\n      >\n        <b-form-radio :value=elem class=\"d-flex justify-content-start\"  v-model=\"selectedstatuse\" >{{elem}}</b-form-radio>\n     \n      </b-form-radio-group>\n    \n    </b-form-group>\n   <b-form-group label=\"Роли\"  >\n\n   \n      <b-form-radio-group\n      v-for=\"elem in roles\"\n        id=\"radiobutton-group-2\"\n     \n   \n        name=\"flavour-3\"\n      >\n        <b-form-radio :value=elem class=\"d-flex\"  v-model=\"selectedrole\">{{elem}}</b-form-radio>\n     \n      </b-form-radio-group>\n   \n   </b-form-group>\n \n   \n      \n      <div class=\"col-md-5 offset-md-1\" v-if=\"$route.meta.EditFormUser\">\n      <h5>1. single file</h5>\n      <form>\n        <div class=\"form-group\">\n          <label for=\"my-file\">Select Image</label>\n          <input type=\"file\" accept=\"image/*\" @change=\"createImage\" class=\"form-control-file\" id=\"my-file\">\n    \n          <div class=\"border p-2 mt-3\">\n            <p>Preview Here:</p>\n            <template v-if=\"preview\">\n              <img :src=\"preview\" class=\"img-fluid\" />\n              <p class=\"mb-0\">file name: {{ image.name }}</p>\n              <p class=\"mb-0\">size: {{ image.size/1024 }}KB</p>\n            </template>\n          </div>\n        </div>\n      </form>\n    </div>\n    </b-form-group> \n  \n        \n        \n\n\n   \n\n  \n    \n    </b-form>\n       <b-button type=\"submit\" variant=\"primary\" @click=\"upload()\">Submit</b-button>\n        <notifications group=\"foo\" />\n  </div>\n</template>\n\n<style >\n\n\n.container .btn {\n    position: absolute;\n    top: 0%;\n    left:100%;\n    transform: translate(-50%, -50%);\n    -ms-transform: translate(-50%, -50%);\n    background-color: #555;\n    color: white;\n    font-size: 16px;\n    padding: 12px 24px;\n    border: none;\n    cursor: pointer;\n    border-radius: 5px;\n    text-align: center;\n}\n</style>\n\n<script>\n\nimport axios from 'axios'\n  export default{\n    \n  props: {\n  },\n     \n          name: 'AddEditUserFormComponent',\n          data(){\n              return{\n              id:0,\n               Avatar:{},\n               Login:\"\", \n               Password:\"\",\n               Email:\"\",\n               roles:[],\n               statuse:[],\n          \n               selectedrole:\"\",\n               selectedstatuse:\"\",\n              files:new FormData(),\n           preview: null,\n      image: null,\n     \n              \n            \n        \n              }\n          },\n          mounted(){\n\n  if(this.session ==undefined){\n                 this.$cookie.set('usersession', 'usersession', { expires: '1h' });\n\n               }\n          \n            axios.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\n             axios.get(\"https://localhost:44303/api/Statuse\").then(Response=> this.statuse=Response.data)\n               axios.get(\"https://localhost:44303/api/Role\").then(Response=> this.roles=Response.data)\n             \n\n            if(this.$route.meta.EditFormUser)     axios.get(\"https://localhost:44303/getfulluser/\"+this.$route.params.id, {headers:{\n                    \"Accept\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"admin\")}},).\n            then(Response=> {\n                 console.log(Response.data);\n                 this.id=Response.data.id\n            this.selectedrole=Response.data.role==null? 1:Response.data.role.titleofRole; \n            this.selectedstatuse=Response.data.statuse==null? 1:Response.data.status.titleofstatuse; \n          this.Login=Response.data.login;\n          console.log(  this.selectedrole)\n           console.log(this.selectedstatuse)\n          this.Password=Response.data.password\n          this.Email=Response.data.email;\n           this.Avatar=Response.data.avatar    \n                      \n                    \n                      \n             \n           \n            \n              const filename= this.Avatar.filename;\n               \n                         this.preview=this.Avatar.url\n               axios.get(this.Avatar.url).then(response=>    {\n                 var file=new File([response.data], filename, {type:\"image/jpg\"}); file.$path=\"\"\n                 this.image=file;} )\n                 console.log(this.preview)\n               \n         \n                   \n              \n\n            }\n\n             )\n\n\n          \n          \n          },\n          \n          methods:{\n                  fileChange(fileList) {\n        this.files.append(\"file\", fileList[0], fileList[0].name);\n    },\n          \n             validateState(ref) {\n      if (\n        this.veeFields[ref] &&\n        (this.veeFields[ref].dirty || this.veeFields[ref].validated)\n      ) {\n        return !this.veeErrors.has(ref);\n      }\n      return null;\n    },\n          \n      \n\n\n    \n    upload:function() {\n\n        \n        axios.defaults.headers.common['Access-Control-Allow-Origin'] = '*'\n  \n   \n \n  \n      \n\n      if(this.$route.meta.EditFormUser){\n         let formData = new FormData()\n\n    let file = this.image\n\n   formData.append('avatar', file, file.name)\n       this.$validator.validate().then(valid => {\n        if (valid) {\n          axios({method:'PUT', url:`https://localhost:44303/edituser/`+this.id, headers:{\n                    \"Accept\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"admin\")},data:formData,params:{ login:this.Login, password:this.Password, email:this.Email, statuse:this.selectedstatuse, role:this.selectedrole }  }).then(response => {\n         this.$notify({\n  group: 'foo',\n  type:'success',\n duration:10000,\n  text: \"Успешно!\"\n});\n             \n            }).catch(d=>{\n              if(d.response)\n         \n              this.$notify({\n  group: 'foo',\n  type:'error',\n  title: d.response.status,\n   duration:10000,\n  text: d.message\n});\n  if(d.request){\n         console.log(d.request.status)\n     this.$notify({\n  group: 'foo',\n  type:'error',\n  title: 'Ошибка',\n   duration:10000,\n  text:d.message\n});\n  }\n});\n        }\n      });\n    \n      }\n\nelse \n\nthis.$validator.validate().then(valid => {\n        if (valid) {\n            axios({method:'POST', url:`https://localhost:44303/register`,headers:{\n                    \"Accept\": \"application/json\",\n                    \"Authorization\": \"Bearer \" + localStorage.getItem(\"user\")}, params:{ login:this.Login, password:this.Password, email:this.Email, status:this.selectedstatuse, role:this.selectedrole }  }).then(response => {\n\n          this.$notify({\n  group: 'foo',\n  type:'success',\n \n  text: \"Успешно!\"\n});\n             \n            }).catch(d=>{\n              if(d.response)\n         \n              this.$notify({\n  group: 'foo',\n  type:'error',\n  title: d.response.status,\n  text: d.message\n});\n  if(d.request){\n         console.log(d.request.status)\n     this.$notify({\n  group: 'foo',\n  type:'error',\n  title: 'Ошибка',\n  text:d.message\n});\n  }\n});\n        }\n      });\n      \n\n    },\n\n    onFileChange(e) {\n    \n      var files = e.target.files || e.dataTransfer.files;\n      if (!files.length) return;\n      this.createImage(files);\n    },\n    createImage(event) {\n      \n    var input = event.target;\n      if (input.files) {\n        var reader = new FileReader();\n        reader.onload = (e) => {\n          this.preview = e.target.result;\n        }\n        this.image=input.files[0];\n        reader.readAsDataURL(input.files[0]);\n      }\n    },\n  RemoveImage:function(index){\n\n   this.image_list.splice(index,1);\n   this.preview_list.splice(index,1)\n\n  }\n          }\n  }\n  \n  \n</script>       "]}]}
{"remainingRequest":"C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\src\\components\\AdminComponents\\AdminPanelHomeComponent.vue?vue&type=template&id=7d053a02&","dependencies":[{"path":"C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\src\\components\\AdminComponents\\AdminPanelHomeComponent.vue","mtime":1628000290932},{"path":"C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Mistake22\\source\\repos\\GameShop\\FrontEnd\\sitee\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}